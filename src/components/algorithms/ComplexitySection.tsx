"use client";

import { Activity } from "lucide-react";
import { MermaidDiagram } from "~/components/common/MermaidDiagram";

export function ComplexitySection() {
  return (
    <div>
      <h3 className="text-xl font-semibold mb-4 flex items-center gap-2">
        <Activity className="h-5 w-5" />
        So S√°nh ƒê·ªô Ph·ª©c T·∫°p Gi·∫£i Thu·∫≠t
      </h3>

      {/* ƒê·ªãnh nghƒ©a v√† gi·∫£i th√≠ch c∆° b·∫£n */}
      <div className="bg-red-50 dark:bg-red-900/20 p-4 rounded-lg mb-4 border-l-4 border-red-500">
        <h4 className="font-semibold text-red-800 dark:text-red-300 mb-2">‚è±Ô∏è ƒê·ªô Ph·ª©c T·∫°p l√† g√¨?</h4>
        <p className="text-gray-700 dark:text-gray-300 mb-3">
          <strong>ƒê·ªô ph·ª©c t·∫°p (Complexity)</strong> ƒëo l∆∞·ªùng t√†i nguy√™n c·∫ßn thi·∫øt ƒë·ªÉ ch·∫°y thu·∫≠t to√°n:
          th·ªùi gian (Time) v√† kh√¥ng gian (Space). Gi√∫p so s√°nh hi·ªáu qu·∫£ c√°c thu·∫≠t to√°n.
        </p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm">
          <div className="bg-white dark:bg-slate-800 p-3 rounded">
            <strong className="text-blue-600 dark:text-blue-400">üïê Time Complexity:</strong>
            <div className="mt-1 text-gray-600 dark:text-gray-300">
              Th·ªùi gian ch·∫°y tƒÉng nh∆∞ th·∫ø n√†o khi input tƒÉng?
              <br/>VD: O(n) = input g·∫•p ƒë√¥i ‚Üí th·ªùi gian g·∫•p ƒë√¥i
            </div>
          </div>
          <div className="bg-white dark:bg-slate-800 p-3 rounded">
            <strong className="text-green-600 dark:text-green-400">üíæ Space Complexity:</strong>
            <div className="mt-1 text-gray-600 dark:text-gray-300">
              B·ªô nh·ªõ c·∫ßn th√™m khi input tƒÉng?
              <br/>VD: O(1) = input tƒÉng, b·ªô nh·ªõ kh√¥ng ƒë·ªïi
            </div>
          </div>
        </div>
      </div>

      <div className="bg-pink-50 dark:bg-pink-900/20 p-4 rounded-lg mb-6 border-l-4 border-pink-500">
        <h4 className="font-semibold text-pink-800 dark:text-pink-300 mb-2">üìä Big O Notation:</h4>
        <p className="text-gray-700 dark:text-gray-300 text-sm mb-3">
          <strong>Big O</strong> m√¥ t·∫£ hi·ªáu su·∫•t x·∫•u nh·∫•t c·ªßa thu·∫≠t to√°n. B·ªè qua h·∫±ng s·ªë v√† t·∫≠p trung v√†o t·ªëc ƒë·ªô tƒÉng tr∆∞·ªüng.
        </p>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-2 text-xs">
          <div className="bg-green-100 dark:bg-green-900 p-2 rounded text-center">
            <strong>O(1)</strong><br/>Tuy·ªát v·ªùi ‚úÖ
          </div>
          <div className="bg-yellow-100 dark:bg-yellow-900 p-2 rounded text-center">
            <strong>O(log n)</strong><br/>R·∫•t t·ªët ‚úÖ
          </div>
          <div className="bg-orange-100 dark:bg-orange-900 p-2 rounded text-center">
            <strong>O(n)</strong><br/>Ch·∫•p nh·∫≠n ƒë∆∞·ª£c ‚ö†Ô∏è
          </div>
          <div className="bg-red-100 dark:bg-red-900 p-2 rounded text-center">
            <strong>O(n¬≤)</strong><br/>Ch·∫≠m ‚ùå
          </div>
        </div>
      </div>

      <div className="mb-6">
        <h4 className="font-medium mb-2">Bi·ªÉu ƒê·ªì ƒê·ªô Ph·ª©c T·∫°p Th·ªùi Gian:</h4>
        <MermaidDiagram
          chart={`
            graph TD
                subgraph "ƒê·ªô Ph·ª©c T·∫°p Th·ªùi Gian"
                    O1["O(1) - H·∫±ng s·ªë"]
                    OLOG["O(log n) - Logarithm"]
                    ON["O(n) - Tuy·∫øn t√≠nh"]
                    ONLOG["O(n log n) - Quasi-linear"]
                    ON2["O(n¬≤) - B·∫≠c hai"]
                    ON3["O(n¬≥) - B·∫≠c ba"]

                    O1 --> OLOG
                    OLOG --> ON
                    ON --> ONLOG
                    ONLOG --> ON2
                    ON2 --> ON3
                end

                subgraph "V√≠ d·ª• Gi·∫£i thu·∫≠t"
                    O1 -.-> EX1["Array access<br/>Hash table lookup"]
                    OLOG -.-> EX2["Binary search<br/>Tree operations"]
                    ON -.-> EX3["Linear search<br/>Array traversal"]
                    ONLOG -.-> EX4["Merge sort<br/>Quick sort (avg)"]
                    ON2 -.-> EX5["Bubble sort<br/>Insertion sort"]
                    ON3 -.-> EX6["Matrix multiplication<br/>Triple nested loops"]
                end

                style O1 fill:#4CAF50,color:#fff
                style OLOG fill:#8BC34A,color:#fff
                style ON fill:#FFEB3B,color:#000
                style ONLOG fill:#FF9800,color:#fff
                style ON2 fill:#F44336,color:#fff
                style ON3 fill:#9C27B0,color:#fff
          `}
          className="mb-4"
        />
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
        <div className="bg-gray-50 dark:bg-slate-700 p-4 rounded border">
          <h4 className="font-medium mb-2">C·∫•u Tr√∫c D·ªØ Li·ªáu:</h4>
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className="border-b">
                  <th className="text-left py-2">C·∫•u Tr√∫c</th>
                  <th className="text-left py-2">Truy C·∫≠p</th>
                  <th className="text-left py-2">T√¨m Ki·∫øm</th>
                  <th className="text-left py-2">Th√™m</th>
                  <th className="text-left py-2">X√≥a</th>
                </tr>
              </thead>
              <tbody className="text-gray-600 dark:text-gray-300">
                <tr className="border-b">
                  <td className="py-2 font-medium">Array</td>
                  <td className="py-2">O(1)</td>
                  <td className="py-2">O(n)</td>
                  <td className="py-2">O(n)</td>
                  <td className="py-2">O(n)</td>
                </tr>
                <tr className="border-b">
                  <td className="py-2 font-medium">Linked List</td>
                  <td className="py-2">O(n)</td>
                  <td className="py-2">O(n)</td>
                  <td className="py-2">O(1)</td>
                  <td className="py-2">O(1)</td>
                </tr>
                <tr className="border-b">
                  <td className="py-2 font-medium">Binary Search Tree</td>
                  <td className="py-2">O(log n)</td>
                  <td className="py-2">O(log n)</td>
                  <td className="py-2">O(log n)</td>
                  <td className="py-2">O(log n)</td>
                </tr>
                <tr>
                  <td className="py-2 font-medium">Hash Table</td>
                  <td className="py-2">O(1)</td>
                  <td className="py-2">O(1)</td>
                  <td className="py-2">O(1)</td>
                  <td className="py-2">O(1)</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <div className="bg-gray-50 dark:bg-slate-700 p-4 rounded border">
          <h4 className="font-medium mb-2">Gi·∫£i Thu·∫≠t S·∫Øp X·∫øp:</h4>
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className="border-b">
                  <th className="text-left py-2">Gi·∫£i Thu·∫≠t</th>
                  <th className="text-left py-2">T·ªët Nh·∫•t</th>
                  <th className="text-left py-2">Trung B√¨nh</th>
                  <th className="text-left py-2">X·∫•u Nh·∫•t</th>
                  <th className="text-left py-2">B·ªô Nh·ªõ</th>
                </tr>
              </thead>
              <tbody className="text-gray-600 dark:text-gray-300">
                <tr className="border-b">
                  <td className="py-2 font-medium">S·∫Øp X·∫øp N·ªïi B·ªçt</td>
                  <td className="py-2">O(n)</td>
                  <td className="py-2">O(n¬≤)</td>
                  <td className="py-2">O(n¬≤)</td>
                  <td className="py-2">O(1)</td>
                </tr>
                <tr className="border-b">
                  <td className="py-2 font-medium">S·∫Øp X·∫øp Nhanh</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(n¬≤)</td>
                  <td className="py-2">O(log n)</td>
                </tr>
                <tr className="border-b">
                  <td className="py-2 font-medium">S·∫Øp X·∫øp Tr·ªôn</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(n)</td>
                </tr>
                <tr>
                  <td className="py-2 font-medium">Heap Sort</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(n log n)</td>
                  <td className="py-2">O(1)</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-gray-50 dark:bg-slate-700 p-4 rounded border">
          <h4 className="font-medium mb-2">Gi·∫£i Thu·∫≠t T√¨m Ki·∫øm:</h4>
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className="border-b">
                  <th className="text-left py-2">Gi·∫£i Thu·∫≠t</th>
                  <th className="text-left py-2">T·ªët Nh·∫•t</th>
                  <th className="text-left py-2">Trung B√¨nh</th>
                  <th className="text-left py-2">X·∫•u Nh·∫•t</th>
                  <th className="text-left py-2">B·ªô Nh·ªõ</th>
                </tr>
              </thead>
              <tbody className="text-gray-600 dark:text-gray-300">
                <tr className="border-b">
                  <td className="py-2 font-medium">T√¨m Ki·∫øm Nh·ªã Ph√¢n</td>
                  <td className="py-2">O(1)</td>
                  <td className="py-2">O(log n)</td>
                  <td className="py-2">O(log n)</td>
                  <td className="py-2">O(1)</td>
                </tr>
                <tr>
                  <td className="py-2 font-medium">T√¨m Ki·∫øm Tuy·∫øn T√≠nh</td>
                  <td className="py-2">O(1)</td>
                  <td className="py-2">O(n)</td>
                  <td className="py-2">O(n)</td>
                  <td className="py-2">O(1)</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <div className="bg-gray-50 dark:bg-slate-700 p-4 rounded border">
          <h4 className="font-medium mb-2">L·ªùi Khuy√™n Ch·ªçn Gi·∫£i Thu·∫≠t:</h4>
          <div className="space-y-2 text-sm">
            <div>
              <strong>D·ªØ li·ªáu nh·ªè (n {"<"} 50):</strong> Gi·∫£i thu·∫≠t ƒë∆°n gi·∫£n nh∆∞ Bubble Sort, Linear Search
            </div>
            <div>
              <strong>D·ªØ li·ªáu trung b√¨nh (50 ‚â§ n ‚â§ 10,000):</strong> Quick Sort, Binary Search
            </div>
            <div>
              <strong>D·ªØ li·ªáu l·ªõn (n {">"} 10,000):</strong> Merge Sort, Hash Table, Binary Search Tree
            </div>
            <div>
              <strong>D·ªØ li·ªáu ƒë√£ s·∫Øp x·∫øp:</strong> Binary Search, Insertion Sort cho ph·∫ßn t·ª≠ m·ªõi
            </div>
            <div>
              <strong>B·ªô nh·ªõ h·∫°n ch·∫ø:</strong> In-place algorithms (Quick Sort, Heap Sort)
            </div>
            <div>
              <strong>Y√™u c·∫ßu ·ªïn ƒë·ªãnh:</strong> Merge Sort, Stable sorting algorithms
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}