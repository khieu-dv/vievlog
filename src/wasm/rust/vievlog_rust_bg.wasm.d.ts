/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const main: () => void;
export const __wbg_rustvector_free: (a: number, b: number) => void;
export const rustvector_new: () => number;
export const rustvector_push: (a: number, b: number) => void;
export const rustvector_pop: (a: number) => number;
export const rustvector_get: (a: number, b: number) => number;
export const rustvector_len: (a: number) => number;
export const rustvector_to_array: (a: number) => any;
export const __wbg_treenode_free: (a: number, b: number) => void;
export const treenode_new: (a: number) => number;
export const treenode_get_value: (a: number) => number;
export const __wbg_binarysearchtree_free: (a: number, b: number) => void;
export const binarysearchtree_new: () => number;
export const binarysearchtree_insert: (a: number, b: number) => void;
export const binarysearchtree_search: (a: number, b: number) => number;
export const binarysearchtree_inorder_traversal: (a: number) => any;
export const __wbg_listnode_free: (a: number, b: number) => void;
export const __wbg_linkedlist_free: (a: number, b: number) => void;
export const linkedlist_new: () => number;
export const linkedlist_push_front: (a: number, b: number) => void;
export const linkedlist_pop_front: (a: number) => number;
export const linkedlist_len: (a: number) => number;
export const linkedlist_to_array: (a: number) => any;
export const __wbg_graph_free: (a: number, b: number) => void;
export const graph_new: () => number;
export const graph_add_vertex: (a: number, b: number) => void;
export const graph_add_edge: (a: number, b: number, c: number) => void;
export const graph_add_undirected_edge: (a: number, b: number, c: number) => void;
export const graph_get_neighbors: (a: number, b: number) => any;
export const graph_get_vertices: (a: number) => any;
export const bubble_sort: (a: number, b: number, c: any) => void;
export const bubble_sort_array: (a: number, b: number) => any;
export const quick_sort_array: (a: number, b: number) => any;
export const merge_sort_array: (a: number, b: number) => any;
export const binary_search: (a: number, b: number, c: number) => number;
export const binary_search_array: (a: number, b: number, c: number) => any;
export const linear_search: (a: number, b: number, c: number) => number;
export const linear_search_array: (a: number, b: number, c: number) => any;
export const generate_random_array: (a: number, b: number) => any;
export const generate_sorted_array: (a: number) => any;
export const benchmark_sort: (a: number, b: number, c: number, d: number) => number;
export const bevy_process_image: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const bevy_process_image_multi: (a: number, b: number, c: number, d: number) => [number, number];
export const bevy_create_animated_effect: (a: number, b: number, c: number, d: number, e: number, f: number) => any;
export const bevy_get_effect_presets: () => any;
export const bevy_apply_preset: (a: number, b: number, c: number, d: number) => [number, number];
export const bevy_process_rgba_image: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => [number, number];
export const bevy_resize_image: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number];
export const bevy_get_all_presets: () => any;
export const bevy_get_preset_config: (a: number, b: number) => [number, number];
export const bevy_apply_cinematic_preset: (a: number, b: number, c: number, d: number, e: number) => [number, number];
export const bevy_suggest_effects: (a: number, b: number, c: number, d: number) => any;
export const bevy_create_preset_previews: (a: number, b: number, c: number, d: number) => any;
export const bevy_batch_process_preset: (a: any, b: number, c: number, d: number) => any;
export const bevy_animate_preset: (a: number, b: number, c: number, d: number, e: number, f: number) => any;
export const bevy_get_performance_metrics: () => any;
export const bevy_generate_ken_burns: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const bevy_generate_transition: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => any;
export const bevy_generate_slideshow: (a: any, b: number, c: number, d: number, e: number) => any;
export const bevy_generate_parallax: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => any;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_6: WebAssembly.Table;
export const wasm_bindgen__convert__closures_____invoke__h357b077c0154e0d6: (a: number, b: number) => void;
export const __wbindgen_start: () => void;
